basePath: /api/v1
definitions:
  endpoints.CourseResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      excerpt:
        type: string
      image:
        type: string
      image_cover:
        type: string
      name:
        type: string
      underline:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  endpoints.CreateCourseRequest:
    properties:
      code:
        maxLength: 15
        type: string
      description:
        maxLength: 255
        type: string
      excerpt:
        maxLength: 140
        type: string
      image:
        type: string
      image_cover:
        type: string
      name:
        maxLength: 100
        type: string
      underline:
        maxLength: 100
        type: string
    required:
    - code
    - description
    - excerpt
    - name
    - underline
    type: object
  endpoints.CreateCourseResponse:
    properties:
      course:
        $ref: '#/definitions/endpoints.CourseResponse'
    type: object
  endpoints.CreateMatrixRequest:
    properties:
      code:
        maxLength: 45
        type: string
      course_uuid:
        type: string
      description:
        maxLength: 255
        type: string
      name:
        maxLength: 100
        type: string
    required:
    - code
    - course_uuid
    - name
    type: object
  endpoints.CreateMatrixResponse:
    properties:
      matrix:
        $ref: '#/definitions/endpoints.MatrixResponse'
    type: object
  endpoints.CreateMatrixSubjectRequest:
    properties:
      group:
        type: string
      is_required:
        type: boolean
      matrix_uuid:
        type: string
      subject_uuid:
        type: string
    required:
    - group
    - matrix_uuid
    - subject_uuid
    type: object
  endpoints.CreateMatrixSubjectResponse:
    properties:
      matrix_subject:
        $ref: '#/definitions/endpoints.MatrixSubjectResponse'
    type: object
  endpoints.CreateSubjectRequest:
    properties:
      code:
        maxLength: 45
        type: string
      credit:
        type: number
      name:
        maxLength: 100
        type: string
      objective:
        maxLength: 245
        type: string
      published_at:
        type: string
      workload:
        type: number
    required:
    - code
    - name
    type: object
  endpoints.CreateSubjectResponse:
    properties:
      subject:
        $ref: '#/definitions/endpoints.SubjectResponse'
    type: object
  endpoints.CreateSubscriptionRequest:
    properties:
      course_uuid:
        type: string
      expires_at:
        type: string
      matrix_uuid:
        type: string
      role:
        type: string
      user_uuid:
        type: string
    required:
    - course_uuid
    - role
    - user_uuid
    type: object
  endpoints.CreateSubscriptionResponse:
    properties:
      subscription:
        $ref: '#/definitions/endpoints.SubscriptionResponse'
    type: object
  endpoints.DeleteCourseResponse:
    properties:
      course:
        $ref: '#/definitions/endpoints.DeletedCourseResponse'
    type: object
  endpoints.DeleteMatrixResponse:
    properties:
      matrix:
        $ref: '#/definitions/endpoints.DeletedMatrixResponse'
    type: object
  endpoints.DeleteSubjectResponse:
    properties:
      subject:
        $ref: '#/definitions/endpoints.DeletedSubjectResponse'
    type: object
  endpoints.DeleteSubscriptionResponse:
    properties:
      subscription:
        $ref: '#/definitions/endpoints.DeletedSubscriptionResponse'
    type: object
  endpoints.DeletedCourseResponse:
    properties:
      deleted_at:
        type: string
      uuid:
        type: string
    type: object
  endpoints.DeletedMatrixResponse:
    properties:
      deleted_at:
        type: string
      uuid:
        type: string
    type: object
  endpoints.DeletedMatrixSubjectResponse:
    properties:
      deleted_at:
        type: string
      matrix_uuid:
        type: string
      subject_uuid:
        type: string
      uuid:
        type: string
    type: object
  endpoints.DeletedSubjectResponse:
    properties:
      deleted_at:
        type: string
      uuid:
        type: string
    type: object
  endpoints.DeletedSubscriptionResponse:
    properties:
      deleted_at:
        type: string
      reason:
        type: string
      uuid:
        type: string
    type: object
  endpoints.FindCourseResponse:
    properties:
      course:
        $ref: '#/definitions/endpoints.CourseResponse'
    type: object
  endpoints.FindMatrixResponse:
    properties:
      matrix:
        $ref: '#/definitions/endpoints.MatrixResponse'
    type: object
  endpoints.FindMatrixSubjectResponse:
    properties:
      matrix_subject:
        $ref: '#/definitions/endpoints.MatrixSubjectResponse'
    type: object
  endpoints.FindSubjectResponse:
    properties:
      subject:
        $ref: '#/definitions/endpoints.SubjectResponse'
    type: object
  endpoints.FindSubscriptionResponse:
    properties:
      subscription:
        $ref: '#/definitions/endpoints.SubscriptionResponse'
    type: object
  endpoints.ListCoursesResponse:
    properties:
      courses:
        items:
          $ref: '#/definitions/endpoints.CourseResponse'
        type: array
    type: object
  endpoints.ListMatricesResponse:
    properties:
      matrices:
        items:
          $ref: '#/definitions/endpoints.MatrixResponse'
        type: array
    type: object
  endpoints.ListMatrixSubjectsResponse:
    properties:
      matrix_subjects:
        items:
          $ref: '#/definitions/endpoints.MatrixSubjectResponse'
        type: array
    type: object
  endpoints.ListSubjectsResponse:
    properties:
      subjects:
        items:
          $ref: '#/definitions/endpoints.SubjectResponse'
        type: array
    type: object
  endpoints.ListSubscriptionsResponse:
    properties:
      subscriptions:
        items:
          $ref: '#/definitions/endpoints.SubscriptionsResponse'
        type: array
    type: object
  endpoints.MatrixResponse:
    properties:
      code:
        type: string
      course_uuid:
        type: string
      created_at:
        type: string
      description:
        type: string
      name:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  endpoints.MatrixSubjectResponse:
    properties:
      created_at:
        type: string
      group:
        type: string
      is_required:
        type: boolean
      matrix_uuid:
        type: string
      subject_uuid:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  endpoints.SubjectResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      credit:
        type: number
      name:
        type: string
      objective:
        type: string
      published_at:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
      workload:
        type: number
    type: object
  endpoints.SubscriptionCourseResponse:
    properties:
      code:
        type: string
      name:
        type: string
      uuid:
        type: string
    type: object
  endpoints.SubscriptionMatrixResponse:
    properties:
      code:
        type: string
      name:
        type: string
      uuid:
        type: string
    type: object
  endpoints.SubscriptionResponse:
    properties:
      course_uuid:
        type: string
      created_at:
        type: string
      expires_at:
        type: string
      matrix_uuid:
        type: string
      role:
        type: string
      updated_at:
        type: string
      user_uuid:
        type: string
      uuid:
        type: string
    type: object
  endpoints.SubscriptionsResponse:
    properties:
      course:
        $ref: '#/definitions/endpoints.SubscriptionCourseResponse'
      course_uuid:
        type: string
      created_at:
        type: string
      expires_at:
        type: string
      matrix:
        $ref: '#/definitions/endpoints.SubscriptionMatrixResponse'
      matrix_uuid:
        type: string
      role:
        type: string
      updated_at:
        type: string
      user_uuid:
        type: string
      uuid:
        type: string
    type: object
  endpoints.UpdateCourseRequest:
    properties:
      code:
        maxLength: 100
        type: string
      description:
        maxLength: 255
        type: string
      excerpt:
        maxLength: 140
        type: string
      image:
        type: string
      image_cover:
        type: string
      name:
        maxLength: 100
        type: string
      underline:
        maxLength: 100
        type: string
      uuid:
        type: string
    required:
    - code
    - description
    - excerpt
    - name
    - underline
    - uuid
    type: object
  endpoints.UpdateCourseResponse:
    properties:
      course:
        $ref: '#/definitions/endpoints.CourseResponse'
    type: object
  endpoints.UpdateMatrixRequest:
    properties:
      code:
        maxLength: 45
        type: string
      description:
        maxLength: 255
        type: string
      name:
        maxLength: 100
        type: string
      uuid:
        type: string
    required:
    - code
    - name
    - uuid
    type: object
  endpoints.UpdateMatrixResponse:
    properties:
      matrix:
        $ref: '#/definitions/endpoints.MatrixResponse'
    type: object
  endpoints.UpdateMatrixSubjectRequest:
    properties:
      group:
        type: string
      is_required:
        type: boolean
      matrix_uuid:
        type: string
      subject_uuid:
        type: string
    required:
    - group
    - matrix_uuid
    - subject_uuid
    type: object
  endpoints.UpdateMatrixSubjectResponse:
    properties:
      matrix_subject:
        $ref: '#/definitions/endpoints.MatrixSubjectResponse'
    type: object
  endpoints.UpdateSubjectRequest:
    properties:
      code:
        maxLength: 45
        type: string
      credit:
        type: number
      name:
        maxLength: 100
        type: string
      objective:
        maxLength: 245
        type: string
      published_at:
        type: string
      uuid:
        type: string
      workload:
        type: number
    required:
    - code
    - name
    - uuid
    type: object
  endpoints.UpdateSubjectResponse:
    properties:
      subject:
        $ref: '#/definitions/endpoints.SubjectResponse'
    type: object
  endpoints.UpdateSubscriptionRequest:
    properties:
      expires_at:
        type: string
      role:
        type: string
      uuid:
        type: string
    required:
    - role
    - uuid
    type: object
  endpoints.UpdateSubscriptionResponse:
    properties:
      subscription:
        $ref: '#/definitions/endpoints.SubscriptionResponse'
    type: object
host: localhost:8080
info:
  contact:
    email: support@sumelms.com
    name: LMS Support
    url: https://sumelms.com/support
  description: This is the Sumé LMS API for Course Microservice
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://sumelms.com/docs/terms
  title: Sumé LMS Course API
  version: "1.0"
paths:
  /courses:
    get:
      description: List a new courses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.ListCoursesResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: List courses
      tags:
      - courses
    post:
      consumes:
      - application/json
      description: Create a new course
      parameters:
      - description: Add Course
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/endpoints.CreateCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.CreateCourseResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create course
      tags:
      - courses
  /courses/{uuid}:
    delete:
      description: Delete a new course
      parameters:
      - description: Course UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.DeleteCourseResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete course
      tags:
      - courses
    get:
      description: Find a new course
      parameters:
      - description: Course UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.FindCourseResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Find course
      tags:
      - courses
    put:
      consumes:
      - application/json
      description: Update a course
      parameters:
      - description: Course UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: Update Course
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/endpoints.UpdateCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.UpdateCourseResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update course
      tags:
      - courses
  /matrices:
    get:
      consumes:
      - application/json
      description: List a new matrices
      parameters:
      - description: course search by uuid
        format: uuid
        in: query
        name: course_uuid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.ListMatricesResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: List matrices
      tags:
      - matrices
    post:
      consumes:
      - application/json
      description: Create a new matrix
      parameters:
      - description: Add Matrix
        in: body
        name: matrices
        required: true
        schema:
          $ref: '#/definitions/endpoints.CreateMatrixRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.CreateMatrixResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create matrix
      tags:
      - matrices
  /matrices/{matrix_uuid}/subjects:
    get:
      consumes:
      - application/json
      description: List matrix subjects
      parameters:
      - description: Matrix UUID
        format: uuid
        in: path
        name: matrix_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.ListMatrixSubjectsResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: List matrix subjects
      tags:
      - matrix_subjects
  /matrices/{matrix_uuid}/subjects/:
    post:
      description: Create a new matrix subject
      parameters:
      - description: Matrix UUID
        format: uuid
        in: path
        name: matrix_uuid
        required: true
        type: string
      - description: Add Matrix Subject
        in: body
        name: matrix_subject
        required: true
        schema:
          $ref: '#/definitions/endpoints.CreateMatrixSubjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.CreateMatrixSubjectResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create matrix subject
      tags:
      - matrix_subjects
  /matrices/{matrix_uuid}/subjects/{subject_uuid}:
    delete:
      description: Delete a new matrix subject
      parameters:
      - description: Matrix UUID
        format: uuid
        in: path
        name: matrix_uuid
        required: true
        type: string
      - description: Subject UUID
        format: uuid
        in: path
        name: subject_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.DeletedMatrixSubjectResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete matrix subject
      tags:
      - matrix_subjects
    get:
      description: Find a new matrix subject
      parameters:
      - description: Matrix UUID
        format: uuid
        in: path
        name: matrix_uuid
        required: true
        type: string
      - description: Subject UUID
        format: uuid
        in: path
        name: subject_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.FindMatrixSubjectResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Find matrix subject
      tags:
      - matrix_subjects
    put:
      consumes:
      - application/json
      description: Update a matrix subject
      parameters:
      - description: Matrix UUID
        format: uuid
        in: path
        name: matrix_uuid
        required: true
        type: string
      - description: Subject UUID
        format: uuid
        in: path
        name: subject_uuid
        required: true
        type: string
      - description: Update MatrixSubject
        in: body
        name: matrix_subject
        required: true
        schema:
          $ref: '#/definitions/endpoints.UpdateMatrixSubjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.UpdateMatrixSubjectResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update matrix subject
      tags:
      - matrix_subjects
  /matrices/{uuid}:
    delete:
      description: Delete a new matrix
      parameters:
      - description: Matrix UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.DeleteMatrixResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete matrix
      tags:
      - matrices
    get:
      description: Find a new matrix
      parameters:
      - description: Matrix UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.FindMatrixResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Find matrix
      tags:
      - matrices
    put:
      consumes:
      - application/json
      description: Update a matrix
      parameters:
      - description: Matrix UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: Update Matrix
        in: body
        name: matrix
        required: true
        schema:
          $ref: '#/definitions/endpoints.UpdateMatrixRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.UpdateMatrixResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update matrix
      tags:
      - matrices
  /subjects:
    get:
      consumes:
      - application/json
      description: List a new subjects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.ListSubjectsResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: List subjects
      tags:
      - subjects
    post:
      consumes:
      - application/json
      description: Create a new subject
      parameters:
      - description: Add Subject
        in: body
        name: subjects
        required: true
        schema:
          $ref: '#/definitions/endpoints.CreateSubjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.CreateSubjectResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create subject
      tags:
      - subjects
  /subjects/{uuid}:
    delete:
      description: Delete a new subject
      parameters:
      - description: Subject UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.DeleteSubjectResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete subject
      tags:
      - subjects
    get:
      description: Find a new subject
      parameters:
      - description: Subject UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.FindSubjectResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Find subject
      tags:
      - subjects
    put:
      consumes:
      - application/json
      description: Update a subject
      parameters:
      - description: Subject UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: Update Subject
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/endpoints.UpdateSubjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.UpdateSubjectResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update subject
      tags:
      - subjects
  /subscriptions:
    get:
      description: List a new subscriptions
      parameters:
      - description: course search by uuid
        format: uuid
        in: query
        name: course_uuid
        type: string
      - description: user search by uuid
        format: uuid
        in: query
        name: user_uuid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.ListSubscriptionsResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: List subscriptions
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Create a new subscription
      parameters:
      - description: Add Subscription
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/endpoints.CreateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.CreateSubscriptionResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create subscription
      tags:
      - subscriptions
  /subscriptions/{uuid}:
    delete:
      description: Delete a new subscription
      parameters:
      - description: Subscription UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.DeleteSubscriptionResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete subscription
      tags:
      - subscriptions
    get:
      description: Find a new subscription
      parameters:
      - description: Subscription UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.FindSubscriptionResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Find subscription
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Update a subscription
      parameters:
      - description: Subscription UUID
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: Update Subscription
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/endpoints.UpdateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.UpdateSubscriptionResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update subscription
      tags:
      - subscriptions
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://sso.sumelms.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: Grants read and write access to administrative information
    tokenUrl: https://sso.sumelms.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: Grants read and write access to administrative information
      write: Grants write access
    tokenUrl: https://sso.sumelms.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://sso.sumelms.com/oauth/authorize
    flow: implicit
    scopes:
      admin: Grants read and write access to administrative information
      write: Grants write access
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: Grants read and write access to administrative information
      read: Grants read access
      write: Grants write access
    tokenUrl: https://sso.sumelms.com/oauth/token
    type: oauth2
swagger: "2.0"
